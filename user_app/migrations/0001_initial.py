# Generated by Django 5.0.6 on 2024-12-19 19:18

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Rol nomi')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Elektron pochta')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefon raqami')),
                ('first_name', models.CharField(max_length=50, verbose_name='Ism')),
                ('second_name', models.CharField(max_length=50, verbose_name='Familiya')),
                ('third_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sharif')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_images/', verbose_name='Rasm')),
                ('birth_day', models.DateField(blank=True, null=True, verbose_name="Tug'ilgan sana")),
                ('gender', models.CharField(blank=True, choices=[('Erkak', 'Erkak'), ('Ayol', 'Ayol')], max_length=10, null=True, verbose_name='Jinsi')),
                ('passport_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Passport raqami')),
                ('jshshir', models.CharField(blank=True, max_length=50, null=True, verbose_name='JSHSHIR')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Davlat')),
                ('province', models.CharField(blank=True, max_length=100, null=True, verbose_name='Viloyat')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tuman')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Manzil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Admin haqida')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.TextField(blank=True, null=True, verbose_name="Bo'lim")),
                ('position', models.TextField(blank=True, null=True, verbose_name='Lavozim')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Admin haqida')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='libraryadmin_profile', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fakultet')),
                ('group', models.CharField(blank=True, max_length=100, null=True, verbose_name='Guruh')),
                ('level', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bosqich')),
                ('semester', models.CharField(blank=True, max_length=100, null=True, verbose_name='Semestr')),
                ('education_form', models.CharField(blank=True, max_length=100, null=True, verbose_name="Ta'lim shakli")),
                ('education_type', models.CharField(blank=True, max_length=100, null=True, verbose_name="Ta'lim turi")),
                ('payment_form', models.CharField(blank=True, max_length=100, null=True, verbose_name="To'lov shakli")),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='user_app.role', verbose_name='Rol')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
            options={
                'unique_together': {('user', 'role')},
            },
        ),
    ]
